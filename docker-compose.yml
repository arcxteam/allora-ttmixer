services:
  inference:
    container_name: inference
    build:
      context: .  # Pastikan ini menunjuk ke direktori di mana Dockerfile dan kode app.py berada
    command: python -u /app/app.py  # Jalankan app.py yang sudah terkonfigurasi
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/inference/ETH || exit 1 && curl -f http://localhost:8000/inference/BTC || exit 1 && curl -f http://localhost:8000/inference/SOL || exit 1 && curl -f http://localhost:8000/inference/BNB || exit 1 && curl -f http://localhost:8000/inference/ARB || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 300s
    volumes:
      - ./inference-data:/app/data  # Sesuaikan lokasi penyimpanan model dan scaler

  updater:
    container_name: updater
    build:
      context: .  # Pastikan ini menunjuk ke lokasi Dockerfile
    environment:
      - INFERENCE_API_ADDRESS=http://inference:8000
    command: >
      sh -c "
      while true; do
        curl -X GET $${INFERENCE_API_ADDRESS}/update;
        sleep 300;  # 300 seconds (5 minutes)
      done
      "
    depends_on:
      inference:
        condition: service_healthy
    
  worker:
    container_name: worker
    image: alloranetwork/allora-offchain-node:latest
    volumes:
      - ./worker-data:/data
    working_dir: /data
    depends_on:
      inference:
        condition: service_healthy
    env_file:
      - ./worker-data/env_file
    entrypoint: ["/node/allora_offchain_node"]

volumes:
  inference-data:
  worker-data:
