#!/bin/bash

# Stop the script if any command fails
set -e

# Check if config.json exists
if [ ! -f config.json ]; then
    echo "Error: config.json file not found, please provide one"
    exit 1
fi

# Replace environment variables in config.json using envsubst (useful if there are any env vars)
envsubst < config.json > config.tmp.json
mv config.tmp.json config.json

# Extract wallet addressKeyName from config.json
nodeName=$(jq -r '.wallet.addressKeyName' config.json)
if [ -z "$nodeName" ]; then
    echo "No wallet name provided for the node, please provide your preferred wallet name in config.json at wallet.addressKeyName"
    exit 1
fi

# Read the content of config.json as a string
json_content=$(cat ./config.json)
stringified_json=$(echo "$json_content" | jq -c .)

# Extract wallet mnemonic from config.json
mnemonic=$(jq -r '.wallet.addressRestoreMnemonic' config.json)
if [ -n "$mnemonic" ]; then
    # Create env_file for worker with necessary environment variables
    echo "ALLORA_OFFCHAIN_NODE_CONFIG_JSON='$stringified_json'" > ./worker-data/env_file
    echo "NAME=$nodeName" >> ./worker-data/env_file
    echo "ENV_LOADED=true" >> ./worker-data/env_file
    echo "Wallet mnemonic already provided. Loading config.json. Please proceed to run docker-compose."
    exit 0
fi

# Ensure the worker-data directory exists
mkdir -p ./worker-data

# Check if the env_file already exists, and if ENV_LOADED is set to false
if [ ! -f ./worker-data/env_file ]; then
    echo "ENV_LOADED=false" > ./worker-data/env_file
fi

# Extract the ENV_LOADED value from the env_file
ENV_LOADED=$(grep '^ENV_LOADED=' ./worker-data/env_file | cut -d '=' -f 2)
if [ "$ENV_LOADED" = "false" ]; then
    json_content=$(cat ./config.json)
    stringified_json=$(echo "$json_content" | jq -c .)

    # Run a Docker command to initialize the wallet or other necessary configs
    docker run -it --entrypoint=bash \
        -v $(pwd)/worker-data:/data \
        -v $(pwd)/scripts:/scripts \
        -e NAME="${nodeName}" \
        -e ALLORA_OFFCHAIN_NODE_CONFIG_JSON="${stringified_json}" \
        alloranetwork/allora-chain:latest -c "bash /scripts/init.sh"

    echo "config.json saved to ./worker-data/env_file"
else
    echo "config.json is already loaded, skipping the operation. You can set ENV_LOADED=false in ./worker-data/env_file to reload the config.json"
fi
